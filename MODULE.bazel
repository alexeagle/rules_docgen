module(name = "rules_docgen", version = "0.0.0")

bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")
bazel_dep(name = "rules_proto", version = "6.0.0.bcr.1")
bazel_dep(name = "toolchains_protoc", version = "0.3.1")
bazel_dep(name = "rules_multitool", version = "0.7.1")
bazel_dep(name = "aspect_rules_js", version = "2.0.0-rc4")
bazel_dep(name = "aspect_rules_ts", version = "3.0.0-rc1")

multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "//tools:tools.lock.json")
use_repo(multitool, "multitool")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to run the same pnpm version that Bazel manages
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

register_toolchains(
    "//tools/toolchains:all",
    dev_dependency = True,
)
